# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: always
    container_name: mssql
    user: root
    environment:
      MSSQL_USER: "sa"
      MSSQL_SA_PASSWORD: "P@ssw0rd"
      ACCEPT_EULA: "Y"
      MSSQL_DATA_DIR: "/var/opt/mssql/data"
      MSSQL_DUMP_DIR: "/var/opt/mssql/dump"
    volumes:
      - ./mssql:/var/opt/mssql/data
    ports:
      - "1438:1438"
    networks:
      - local
    healthcheck:
      test: [ "CMD-SHELL", "/var/opt/mssql/data/entrypoint.sh" ]
      interval: 10s
      retries: 5
      timeout: 5s
    #command: bash -c /var/opt/mssql/data/entrypoint.sh
  nmea:
    image: nmea:latest
    container_name: nmea
    environment:
      - DISPLAY=host.docker.internal:0.0
    build: .
    depends_on:
      - mssql
    networks:
      - local
    ports:
      - "8081:8081"
networks:
  local:
    driver: bridge
#volumes:
#  db-data:
#  server:
#    build:
#      context: .
#    ports:
#      - 8088:8088

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

